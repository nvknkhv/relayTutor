/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @emails oncall+relay
 * 
 * @format
 */
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var useLazyLoadQuery = require('./useLazyLoadQuery');
/**
 * This hook can be used to render client-only queries.
 * These queries are consist of queries for client-only data,
 * schematized via local schema extensions and/or Relay resolvers.
 */


function useClientQuery(gqlQuery, variables, options) {
  // $FlowFixMe[incompatible-type] client queries can be used with useLazyLoadQuery, but only with `store-only` policy.
  var query = gqlQuery;
  return useLazyLoadQuery(query, variables, (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, options), {}, {
    fetchPolicy: 'store-only'
  }));
}

module.exports = useClientQuery;